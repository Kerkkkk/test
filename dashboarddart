import 'package:flutter/material.dart';
import 'package:pawconnect/dashboard/widgets/post.dart';
import 'package:pawconnect/dashboard/widgets/vetlocation.dart';
import 'package:pawconnect/dashboard/widgets/adoptpet.dart';
import 'package:pawconnect/dashboard/widgets/myprofile.dart';
import 'package:pawconnect/dashboard/widgets/donate.dart';
import 'package:pawconnect/dashboard/widgets/learning.dart';
import 'package:pawconnect/dashboard/widgets/rescuepet.dart';
import 'package:pawconnect/dashboard/widgets/nfc.dart';
import 'package:pawconnect/dashboard/widgets/addpet.dart';
import 'package:pawconnect/login/login.dart';

class DashboardScreen extends StatefulWidget {
  const DashboardScreen({super.key});

  @override
  State<DashboardScreen> createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen> {
  int _currentIndex = 0;

  final List<Widget> _tabs = [
    const PostScreen(),
    const MapScreen(),
    const PetListScreen(),
    const ProfileScreen(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Dashboard'),
      ),
      drawer: Drawer(
        child: Column(
          children: [
            Container(
              height: 200,
              color: const Color.fromARGB(255, 168, 168, 168),
              child: Center(
                child: CircleAvatar(
                  radius: 80,
                  backgroundColor: Colors.white,                  
                  backgroundImage: AssetImage('assets/images/icon.png'),
                ),
              ),
            ),
            ListTile(
              leading: const Icon(Icons.nfc),
              title: const Text('NFC Scan'),
              onTap: () {
                setState(() {
                  _currentIndex = 0;
                });
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const NfcScanScreen(),
                  ),
                );
              },
            ),
            ListTile(
              leading: const Icon(Icons.pets_outlined),
              title: const Text('Add Pet'),
              onTap: () {
                setState(() {
                  _currentIndex = 0;
                });
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const AddPetScreen(),
                  ),
                );
              },
            ),
            ListTile(
              leading: const Icon(Icons.report),
              title: const Text('Report'),
              onTap: () {
                setState(() {
                  _currentIndex = 1;
                });
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const ReportMissingPetScreen(),
                  ),
                );
                
              },
            ),
            ListTile(
              leading: const Icon(Icons.menu_book),
              title: const Text('Learning'),
              onTap: () {
                setState(() {
                  _currentIndex = 2;
                });
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const PetSurveyScreen(),
                  ),
                );
              },
            ),
            ListTile(
              leading: const Icon(Icons.volunteer_activism),
              title: const Text('Donate'),
              onTap: () {
                setState(() {
                  _currentIndex = 3;
                });
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const DonationScreen(),
                  ),
                );
              },
            ),

            const Spacer(),
            ListTile(
              leading: const Icon(Icons.logout, color: Colors.red),
              title: const Text(
                'Logout',
                style: TextStyle(color: Colors.red),
              ),
              onTap: () {
                
               Navigator.pushAndRemoveUntil(
                  context,
                  MaterialPageRoute(builder: (context) => const LoginScreen()),
                  (route) => false,
                );

                ScaffoldMessenger.of(context).showSnackBar(
                  const SnackBar(content: Text('Logged out')),
                );
              },
            ),
          ],
        ),
      ),
      body: _tabs[_currentIndex],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        selectedItemColor: Colors.blue,
        unselectedItemColor: Colors.grey,
        type: BottomNavigationBarType.fixed,
        onTap: (index) {
          setState(() {
            _currentIndex = index;
          });
        },
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Feeds',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'Vet Map',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.message),
            label: 'Adopt',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.settings),
            label: 'Profile',
          ),
        ],
      ),
    );
  }
}

class MessagesTab extends StatelessWidget {
  const MessagesTab({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: const [
          Icon(Icons.message, size: 80, color: Colors.orange),
          SizedBox(height: 16),
          Text('Messages Tab', style: TextStyle(fontSize: 24)),
        ],
      ),
    );
  }
}

class SettingsTab extends StatelessWidget {
  const SettingsTab({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: const [
          Icon(Icons.settings, size: 80, color: Colors.red),
          SizedBox(height: 16),
          Text('Settings Tab', style: TextStyle(fontSize: 24)),
        ],
      ),
    );
  }
}
